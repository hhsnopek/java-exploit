var path=require("path"),nodeunit=require("nodeunit"),moment=require("../moment");module.exports=function(e){function t(t){e.utils.spawn({cmd:"systemsetup",args:["gettimezone"]},function(e,n){t(n.stdout.replace("Time Zone: ",""))})}function n(e,t){nodeunit.runFiles([path.join(process.cwd(),"test/moment"),path.join(process.cwd(),"test/lang")],{testDone:function(t,n){n.failures()&&i.push([e,t,n])},done:function(n){s(e,n),t()}})}function a(t,n,a){e.log.writeln(""),e.log.error(t+" failed: "+n),a.forEach(function(t){var n=t.error;t.failed()&&(t.message&&e.log.error(t.message),n&&n.actual&&n.expected&&n.operator&&e.log.error([n.actual,n.operator,n.expected].join(" ")))})}function s(t,n){var a=n.failures(),s=n.length-a,r=a?"XX".red:"OK".green,i=s+" passed",u=a?(a+" failed").red:a+" failed",l=""+-moment().zone()/60;e.log.writetableln(_,[r,l,t,i,u]),a?d++:o++}function r(){var t;if(d)for(e.log.writeln(d+" failures"),t=0;i.length>t;t++)a.apply(null,i[t])}var i=[],_=[4,6,46,12,12],d=0,o=0;e.registerTask("zone","Run the unit tests in the current timezone.",function(){var e=this.async();t(function(t){n(t,function(){r(),e()})})})};