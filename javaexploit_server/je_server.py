#! /usr/bin/python2.7
"""
'je_server.py' runs the server-side script for collecting CVE Data.
Access any data from the intended output files: 'datacollection.json' or 'last_scrape_date.json'
"""

import logging
import urllib2
from bs4 import BeautifulSoup
import simplejson
from datetime import *
from time import time
from operator import itemgetter


# Logging configuration
logger = logging.getLogger('je_server.py')
logger.setLevel(logging.DEBUG)
ch = logging.FileHandler('je_server_log.log')
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)
logger.addHandler(ch)


"""
'dataparser()' grabs data from 'cve.mitre.org', parses, and saves to file 'datacollection.json'.
"""

def dataparser():

	test_dir = '/usrdata/web/java-exploit/javaexploit_client/assets/data/datacollection.json'  # For testing purposes
	server_dir = '/var/www/java-exploit.com/data/datacollection.json'  # Server usage
	datacollection = []
	
	html = urllib2.urlopen('http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=Java').read()
	soup = BeautifulSoup(html, 'html5lib')
	table = soup.find(id="TableWithRules")

	for td in table.find_all('tr'):
	
		try:
			name = td.find('a').text
			info = td.find_next('td').find_next('td').text
			info = ' '.join(info.encode('utf8').split())
			datacollection.append({
				"name": name.encode('utf8'),
				"info": info,
			})
	
		except AttributeError:
			pass
	
	cvetotal = soup.find('b').text

	f = open(test_dir, 'w')
	f.write(simplejson.dumps(sorted(datacollection, key=itemgetter('name'), reverse=True)))
	f.close()

	return cvetotal

"""
'currenttime()' initiates 'dataparser()' loads the 'old_shitty_data' compares to current data, 
"""

def currenttime():
	
	test_dir = '/usrdata/web/java-exploit/javaexploit_client/assets/data/last_scrape_date.json'  # For testing purposes
	server_dir = '/var/www/java-exploit.com/data/last_scrape_date.json'  # Server usage
	currentcvetotal = dataparser()
	nf = open(test_dir, 'r')
	
	datacollection = nf.read()
	old_shitty_data = simplejson.loads(datacollection)
	nf.close
	
	if old_shitty_data['cvetotal'] != currentcvetotal:
		nf = open(test_dir, 'w')
		nf.write(simplejson.dumps({
			"cvetotal": currentcvetotal,
			"last_exploit_time": time(),
		}))
	
	nf.close()

currenttime()
